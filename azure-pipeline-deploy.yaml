parameters:
  - name: deployLibrary
    displayName: Deploy Library
    type: boolean
    default: true

trigger:
  tags:
    include:
      - '*'

pool: UAPC-Container-ScaleSet
resources:
  containers:
    - container: uapc-base
      image: schwarzit-xx-sit-uapc-plf-public-docker-local.jfrog.io/uapc-project:v0.3.0
      endpoint: uapc-sc-dcr_plf-public

variables:
  - name: PROJECT_ID
    value: pfore
  # Artifactory is independent of deployment stage
  - name: DeploymentStageShort
    value: e
  - name: packageName
    value: pfore-cloud-utilities

stages:
  - stage: labels
    displayName: 'Generate Library label'
    jobs:
      - job: labels
        displayName: 'Generate Library label'
        steps:
          - bash: |
              # For stable releases, artifact_label will be the package version
              # For dev releases, artifact_label is conformant to PEP440,
              # defined as `<public-version-identifier>+<local-version-identifier>`
              # See https://www.python.org/dev/peps/pep-0440
              if [[ $(Build.SourceBranchName) =~ ^v[0-9]\.* ]] ; then
                ARTIFACT_LABEL="(Build.SourceBranchName)"
                # Remove the `v` from the tag - v0.0.1 -> 0.0.1
                ARTIFACT_LABEL=${ARTIFACT_LABEL//v}
              else
                # If it's the first dev release preceding any stable releases,
                # version 0.0.0 will be used
                if [ ! $(git tag -l) ]; then
                  latestTag="0.0.0"
                else
                  latestTag=$(git describe --tags $(git rev-list --tags --max-count=1))
                  latestTag=${latestTag//v}
                fi
                # Finally fetch and add the commit hash
                commit_hash=$(Build.SourceVersion)
                commit_hash_short=${commit_hash:0:8}
                ARTIFACT_LABEL="$latestTag+dev-$commit_hash_short"
              fi

              echo "##vso[task.setvariable variable=ARTIFACT_LABEL;isOutput=true]${ARTIFACT_LABEL}"
            name: labels
            displayName: 'Generate Library label'

  - stage: deploy_library
    displayName: 'Deploy Library'
    dependsOn: labels
    condition: |
      and(succeeded(),
          or(
          and(
            eq(variables['Build.SourceBranch'], 'refs/heads/dev'),
            eq(variables['Build.Reason'], 'Manual')
          ),
          and(
            eq(variables['Build.SourceBranch'], 'refs/tags/v'),
            eq(variables['Build.Reason'], 'IndividualCI')
          )
        )
      )
    variables:
      - name: ARTIFACT_LABEL
        value: $[ stageDependencies.labels.labels.outputs['labels.ARTIFACT_LABEL'] ]
    jobs:
      - ${{ if eq(parameters.deployLibrary, true) }}:
          - template: azure-pipelines/deploy.yaml
